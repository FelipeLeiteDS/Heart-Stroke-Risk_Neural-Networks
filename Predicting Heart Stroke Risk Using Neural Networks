# importing the file
import pandas as pd
import numpy as np
df = pd.read_excel("/heart.xlsx")

X = df.drop('output', axis = 1)
y = df['output']

#training model
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)

from tensorflow import keras

model = keras.Sequential(
    [
        keras.layers.Dense(
            256, activation="relu", input_shape=[13]
        ),
        keras.layers.Dense(515, activation="relu"),
        keras.layers.Dropout(0.3),
        keras.layers.Dense(50, activation="relu"),
        keras.layers.Dropout(0.3),
        keras.layers.Dense(1, activation="sigmoid"),
    ]
)
model.summary()

model.compile(optimizer = 'Adam', loss = 'binary_crossentropy', metrics = ['binary_accuracy'])

early_stopping = keras.callbacks.EarlyStopping( patience = 20, min_delta = 0.001,
                                               restore_best_weights =True )
history = model.fit(
    X_train, y_train,
    validation_data=(X_test, y_test),
    batch_size=15,
    epochs=50,
    callbacks = [early_stopping],
    verbose=0,
)

model.evaluate(X_test, y_test)

y_pred =(model.predict(X_test)>0.5).astype("int32")

#model evaluation
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
accuracy_score(y_test, y_pred)

print(classification_report(y_test, y_pred))

model.predict([[63,1,3,145,233,1,0,150,0,2.3,0,0,1]])

import csv

# Compute the mean values for each variable
mean_values = X_train.mean()

# Select the variable you want to iterate over
variable_to_iterate = 'oldpeak'

# Create a list to store the predictions
predictions = []

# Iterate over the values of the selected variable
for value in range(0, 7):
    # Create a copy of the mean values
    input_values = mean_values.copy()

    # Set the value of the selected variable to the current iteration value
    input_values[variable_to_iterate] = value

    # Make prediction using the modified input values
    prediction = model.predict(np.array([input_values]))

    # Append the prediction to the list
    predictions.append((variable_to_iterate, value, prediction))

# Specify the output CSV file path
output_file = 'predictions.csv'

# Write the predictions to the CSV file
with open(output_file, 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow(['Variable', 'Value', 'Prediction'])  # Write header
    for row in predictions:
        writer.writerow(row)
